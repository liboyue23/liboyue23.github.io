"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _math = require("./tag/math");

var _math2 = _interopRequireDefault(_math);

var _inject = require("./filter/inject");

var _inject2 = _interopRequireDefault(_inject);

var _script = require("./script");

var _script2 = _interopRequireDefault(_script);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var MathJax = function () {
  function MathJax(hexo) {
    _classCallCheck(this, MathJax);

    this.hexo = hexo;
    this.tag = new _math2.default(hexo), this.script = new _script2.default(hexo), this.injector = new _inject2.default(hexo, this.script);
  }

  _createClass(MathJax, [{
    key: "register",
    value: function register() {
      var tag = this.tag;
      var injector = this.injector;

      tag.register();
      injector.register();
    }
  }]);

  return MathJax;
}();

exports.default = MathJax;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uZXM2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUlxQjtBQUNuQixXQURtQixPQUNuQixDQUFZLElBQVosRUFBa0I7MEJBREMsU0FDRDs7QUFDaEIsU0FBSyxJQUFMLEdBQVksSUFBWixDQURnQjtBQUVoQixTQUFLLEdBQUwsR0FBVyxtQkFBWSxJQUFaLENBQVgsRUFDQSxLQUFLLE1BQUwsR0FBYyxxQkFBVyxJQUFYLENBQWQsRUFDQSxLQUFLLFFBQUwsR0FBZ0IscUJBQVcsSUFBWCxFQUFpQixLQUFLLE1BQUwsQ0FBakMsQ0FKZ0I7R0FBbEI7O2VBRG1COzsrQkFPUjtVQUNILE1BQWtCLEtBQWxCLElBREc7VUFDRSxXQUFhLEtBQWIsU0FERjs7QUFFVCxVQUFJLFFBQUosR0FGUztBQUdULGVBQVMsUUFBVCxHQUhTOzs7O1NBUFEiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYXRoVGFnIGZyb20gXCIuL3RhZy9tYXRoXCI7XHJcbmltcG9ydCBJbmplY3QgZnJvbSBcIi4vZmlsdGVyL2luamVjdFwiO1xyXG5pbXBvcnQgU2NyaXB0IGZyb20gXCIuL3NjcmlwdFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF0aEpheCB7XHJcbiAgY29uc3RydWN0b3IoaGV4bykge1xyXG4gICAgdGhpcy5oZXhvID0gaGV4bztcclxuICAgIHRoaXMudGFnID0gbmV3IE1hdGhUYWcoaGV4byksXHJcbiAgICB0aGlzLnNjcmlwdCA9IG5ldyBTY3JpcHQoaGV4byksXHJcbiAgICB0aGlzLmluamVjdG9yID0gbmV3IEluamVjdChoZXhvLCB0aGlzLnNjcmlwdCk7XHJcbiAgfVxyXG4gIHJlZ2lzdGVyKCkge1xyXG4gICAgbGV0IHsgdGFnLCBpbmplY3RvciB9ID0gdGhpcztcclxuICAgIHRhZy5yZWdpc3RlcigpO1xyXG4gICAgaW5qZWN0b3IucmVnaXN0ZXIoKTtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
