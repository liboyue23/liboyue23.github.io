"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var INLINE_MATH_REGEX = exports.INLINE_MATH_REGEX = /\$.*?\$/;
var BLOCK_MATH_REGEX = exports.BLOCK_MATH_REGEX = /^\s*\$\$[\s\S]*\$\$\s*$/m;
var INJECTION_REGEX = exports.INJECTION_REGEX = /([\s\S]*)(<\/body>[\s\S]*)/i;
var BODY_REGEX = exports.BODY_REGEX = /<\/body>/i;

var MATH_MARKER = exports.MATH_MARKER = "<!-- Has MathJax -->";

var TEMPLATE = exports.TEMPLATE = "\n<!-- Begin: Injected MathJax -->\n<script type=\"text/x-mathjax-config\">\n  MathJax.Hub.Config(<%= JSON.stringify(config) %>);\n</script>\n\n<script type=\"text/x-mathjax-config\">\n    MathJax.Hub.Queue(function() {\n        var all = MathJax.Hub.getAllJax(), i;\n        for(i=0; i < all.length; i += 1) {\n            all[i].SourceElement().parentNode.className += ' has-jax';\n        }\n    });\n</script>\n\n<script type=\"text/javascript\" src=\"<%= src %>\">\n</script>\n<!-- End: Injected MathJax -->\n";

var DEFAULT_OPTS = exports.DEFAULT_OPTS = {
  src: "//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML",
  config: {
    tex2jax: {
      inlineMath: [['$', '$'], ["\\(", "\\)"]],
      skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code'],
      processEscapes: true
    },
    TeX: {
      equationNumbers: {
        autoNumber: "AMS"
      }
    }
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0cy5lczYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxJQUFNLGdEQUFvQixTQUFwQjtBQUNOLElBQU0sOENBQW1CLDBCQUFuQjtBQUNOLElBQU0sNENBQWtCLDZCQUFsQjtBQUNOLElBQU0sa0NBQWEsV0FBYjs7QUFFTixJQUFNLG9DQUFjLHNCQUFkOztBQUVOLElBQU0sa2lCQUFOOztBQW9CQSxJQUFNLHNDQUFlO0FBQzFCLE9BQUssMEVBQUw7QUFDQSxVQUFRO0FBQ04sYUFBUztBQUNQLGtCQUFZLENBQUUsQ0FBQyxHQUFELEVBQUssR0FBTCxDQUFGLEVBQWEsQ0FBQyxLQUFELEVBQU8sS0FBUCxDQUFiLENBQVo7QUFDQSxnQkFBVSxDQUFDLFFBQUQsRUFBVyxVQUFYLEVBQXVCLE9BQXZCLEVBQWdDLFVBQWhDLEVBQTRDLEtBQTVDLEVBQW1ELE1BQW5ELENBQVY7QUFDQSxzQkFBZ0IsSUFBaEI7S0FIRjtBQUtBLFNBQUs7QUFDSCx1QkFBaUI7QUFDZixvQkFBWSxLQUFaO09BREY7S0FERjtHQU5GO0NBRlciLCJmaWxlIjoiY29uc3RzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IElOTElORV9NQVRIX1JFR0VYID0gL1xcJC4qP1xcJC87XHJcbmV4cG9ydCBjb25zdCBCTE9DS19NQVRIX1JFR0VYID0gL15cXHMqXFwkXFwkW1xcc1xcU10qXFwkXFwkXFxzKiQvbTtcclxuZXhwb3J0IGNvbnN0IElOSkVDVElPTl9SRUdFWCA9IC8oW1xcc1xcU10qKSg8XFwvYm9keT5bXFxzXFxTXSopL2k7XHJcbmV4cG9ydCBjb25zdCBCT0RZX1JFR0VYID0gLzxcXC9ib2R5Pi9pO1xyXG5cclxuZXhwb3J0IGNvbnN0IE1BVEhfTUFSS0VSID0gXCI8IS0tIEhhcyBNYXRoSmF4IC0tPlwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IFRFTVBMQVRFID0gYFxyXG48IS0tIEJlZ2luOiBJbmplY3RlZCBNYXRoSmF4IC0tPlxyXG48c2NyaXB0IHR5cGU9XCJ0ZXh0L3gtbWF0aGpheC1jb25maWdcIj5cclxuICBNYXRoSmF4Lkh1Yi5Db25maWcoPCU9IEpTT04uc3RyaW5naWZ5KGNvbmZpZykgJT4pO1xyXG48L3NjcmlwdD5cclxuXHJcbjxzY3JpcHQgdHlwZT1cInRleHQveC1tYXRoamF4LWNvbmZpZ1wiPlxyXG4gICAgTWF0aEpheC5IdWIuUXVldWUoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgdmFyIGFsbCA9IE1hdGhKYXguSHViLmdldEFsbEpheCgpLCBpO1xyXG4gICAgICAgIGZvcihpPTA7IGkgPCBhbGwubGVuZ3RoOyBpICs9IDEpIHtcclxuICAgICAgICAgICAgYWxsW2ldLlNvdXJjZUVsZW1lbnQoKS5wYXJlbnROb2RlLmNsYXNzTmFtZSArPSAnIGhhcy1qYXgnO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG48L3NjcmlwdD5cclxuXHJcbjxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIHNyYz1cIjwlPSBzcmMgJT5cIj5cclxuPC9zY3JpcHQ+XHJcbjwhLS0gRW5kOiBJbmplY3RlZCBNYXRoSmF4IC0tPlxyXG5gXHJcblxyXG5leHBvcnQgY29uc3QgREVGQVVMVF9PUFRTID0ge1xyXG4gIHNyYzogXCIvL2Nkbi5tYXRoamF4Lm9yZy9tYXRoamF4L2xhdGVzdC9NYXRoSmF4LmpzP2NvbmZpZz1UZVgtQU1TLU1NTF9IVE1Mb3JNTUxcIixcclxuICBjb25maWc6IHtcclxuICAgIHRleDJqYXg6IHtcclxuICAgICAgaW5saW5lTWF0aDogWyBbJyQnLCckJ10sIFtcIlxcXFwoXCIsXCJcXFxcKVwiXSBdLFxyXG4gICAgICBza2lwVGFnczogWydzY3JpcHQnLCAnbm9zY3JpcHQnLCAnc3R5bGUnLCAndGV4dGFyZWEnLCAncHJlJywgJ2NvZGUnXSxcclxuICAgICAgcHJvY2Vzc0VzY2FwZXM6IHRydWVcclxuICAgIH0sXHJcbiAgICBUZVg6IHtcclxuICAgICAgZXF1YXRpb25OdW1iZXJzOiB7XHJcbiAgICAgICAgYXV0b051bWJlcjogXCJBTVNcIlxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
